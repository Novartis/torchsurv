[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "torchsurv"
dynamic = ["version"]
authors = [
    { name = "Thibaud Coroller", email = "thibaud.coroller@novartis.com" },
    { name = "Melodie Monod", email = "monod.melodie@gmail.com" },
    { name = "Peter Krusche", email = "peter.krusche@novartis.com" },
    { name = "Qian Cao", email = "qian.cao@fda.hhs.com" },
]
description = "Deep survival analysis made easy with pytorch"
license = { file = "LICENSE.txt" }
readme = { file = "README.md", content-type = "text/markdown" }
keywords = [
    "survival analysis",
    "deep learning",
    "pytorch",
    "machine learning",
    "censored data",
    "neural networks",
    "survival models",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = ["torch", "scipy", "numpy", "torchmetrics"]
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-xdist>=3.0",
    "hypothesis>=6.0",
    "ruff>=0.1.0",
    "mypy>=1.7",
    "pre-commit>=3.0",
]
docs = [
    "sphinx>=7.0",
    "sphinx-autoapi",
    "sphinx-rtd-theme",
    "numpydoc",
    "jupyter-book",
]


[tool.hatch.version]
path = "src/torchsurv/__init__.py"

[project.urls]
Homepage = "https://github.com/Novartis/torchsurv"
Repository = "https://github.com/Novartis/torchsurv"
Documentation = "https://opensource.nibr.com/torchsurv/"
IssueTracker = "https://github.com/Novartis/torchsurv/issues"
Changelog = "https://opensource.nibr.com/torchsurv/CHANGELOG.html"

[tool.codespell]
ignore-words-list = ["TE", "FPR", "tOI", "te"] # Known false positives
skip = [
    "*.bib",
    "*.toml",
] # Exclude references, which may contain names confusing the spell checker

[tool.mypy]
show_error_codes = true
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

# For scientific packages
[[tool.mypy.overrides]]
module = ["torch.*", "numpy.*", "scipy.*"]
ignore_missing_imports = true

# pyproject.toml
[tool.ruff]
target-version = "py38"
line-length = 120
exclude = ['test_*.py', 'utils.py']

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
ignore = ["E501"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=torchsurv",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]

[tool.doctest]
modules = ["torchsurv"]
